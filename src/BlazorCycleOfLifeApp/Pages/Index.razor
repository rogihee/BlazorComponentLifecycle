@page "/"
@using BlazorCycleOfLifeApp.Components.Demos

@inject StateService StateService
<h1>Blazor LifeCycle demo</h1>

<SplitView>
    <LeftContent>
        <div class="demo-view">
            <DemoList ShowDemo="@ShowDemo"/>
            <div class="demo-container">
                <h3>@ActiveDemo</h3>
                <div class="demo-components">
                @switch (ActiveDemo)
                {
                    case nameof(CycleButton):
                        <CycleButton @ref="@CurrentRef" OnClick="@HandleCount">
                            Press me
                        </CycleButton>
                        break;
                    case nameof(EventCallbackButton):
                        <EventCallbackButton @ref="@CurrentRef"/>
                        break;
                    case nameof(CounterStateViaService):
                        <CycleButton @ref="@CurrentRef" OnClick="@(() => { StateService.SharedCounter++; })">
                            Press me
                        </CycleButton>
                        <CounterStateViaService @ref="@CurrentRef" />
                        break;
                    case nameof(CounterRoundToFive):
                        <CycleButton @ref="@CurrentRef" OnClick="@HandleCount">
                            Press me
                        </CycleButton>
                        <CounterRoundToFive @ref="@CurrentRef" Count="@Count"/>
                        break;
                }
                </div>
            </div>
            <div class="counter-result">
                Counter: @Count
            </div>
        </div>
    </LeftContent>
    <RightContent>
        <LifeCycleView View="@CurrentRef?.LifeCycleHistory"/>
    </RightContent>
</SplitView>

@code
{
    private BaseCycleComponent CurrentRef { get; set; }
    private string ActiveDemo { get; set; }

    protected override void OnInitialized()
    {
        
    }

    private int Count { get; set; }
    private int EventCount { get; set; }

    private void HandleCount()
    {
        StateHasChanged();
        Count++;
        StateHasChanged();
    }

    private void ShowDemo(string type)
    {
        ActiveDemo = type;
        StateHasChanged();
    }
}
