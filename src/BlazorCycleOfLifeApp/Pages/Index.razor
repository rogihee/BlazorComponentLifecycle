@page "/"

@inject LifeCycleService LifeCycleService
@inject StateService StateService

<h1>Blazor LifeCycle demo</h1>

<SplitView>
    <LeftContent>
        <div class="demo-view">
            <DemoListView OnChangeDemo="@ShowDemo"/>
            <div class="demo-container">
                @if (ActiveDemo != null)
                {
                    @*<h3>@ActiveDemo.Nr. @ActiveDemo.Title</h3>*@
                    <h4>@ActiveDemo.Description</h4>

                    <div class="demo-components">
                        @switch (ActiveDemo.Nr)
                        {
                            case 1:
                                <CycleButton OnClick="@HandleCount">
                                    Press me
                                </CycleButton>
                                break;
                            case 2:
                                <CycleButton OnClick="@HandleClickViaService">
                                    Count via state service
                                </CycleButton>
                                <CounterStateViaService />
                                break;
                            case 3:
                                <EventCallbackButton OnClick="@HandleCount" />
                                break;
                            case 4:
                                <CycleButton OnClick="@HandleClickViaModel">
                                    Count via model
                                </CycleButton>
                                <CounterViaObjectParameter Counter="@CounterModel" />
                                break;
                            case 5:
                                <CycleButton OnClick="@HandleCount">
                                    Count round to five
                                </CycleButton>
                                <CounterRoundToFive Count="@Count"/>
                                break;
                        }
                    </div>
                }
                else
                {
                    <div class="pick-demo">No demo selected</div>
                }
            </div>
            <div class="counter-result">
                The count: @Count
            </div>
        </div>
    </LeftContent>
    <RightContent>
        <LifeCycleView/>
    </RightContent>
</SplitView>

@code
{
    private DemoModel ActiveDemo { get; set; }

    private int Count { get; set; }
    private CounterModel CounterModel { get; set; } = new();

    private void HandleCount()
    {
        StateHasChanged();
        Count++;
        StateHasChanged();
    }
    
    private void HandleClickViaService()
    {
        StateService.SharedCounter++;
    }

    private void HandleClickViaModel()
    {
        Count++;
        if (Count % 2 == 0)
        {
            // only update the model count when overall count is even, so that gets half the updates
            CounterModel.Count++;
        }
        StateHasChanged();
    }

    private void ShowDemo(int nr)
    {
        Count = 0;
        LifeCycleService.Clear();
        ActiveDemo = DemoList.All.Single(x=>x.Nr == nr);
        StateHasChanged();
    }

}
